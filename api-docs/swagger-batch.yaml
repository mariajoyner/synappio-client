swaggerVersion: 1.2
apiVersion: 1.0
basePath: api.datavalidation.com
resourcePath: /batch
produces:
  - application/json
consumes:
  - application/json
apis:
  - path: /list/
    operations:
      - method: GET
        nickname: getLists
        summary: Retrieve your lists
        type: ListCollection
        notes: |
          You can use this to retrieve summary or detailed data about all the lists
          in your account, or just a few using filters.
        parameters:
          - name: paging.skip
            description: Paging offset
            type: integer
            paramType: query
            defaultValue: 0
          - name: paging.limit
            description: Paging limit
            type: integer
            paramType: query
            defaultValue: 50
            maximum: 500
          - name: _expand
            description: Expand the list of items?
            paramType: query
            type: boolean
            defaultValue: false
          - name: pretty
            description: Indent JSON output?
            paramType: query
            type: boolean
            defaultValue: false
      - method: POST
        nickname: createList
        summary: Create a new list
        type: ListResponse
        consumes: ['text/csv']
        notes: |
          This method is used to create a list. Note that you must provide mapping data in
          the URL parameters as documented below.
        parameters:
          - name: header
            in: query
            description: Is there a header row present in the CSV data
            required: true
            type: boolean
          - name: email_col
            in: query
            description: Which column is the email address in? (0 = first column)
            required: true
            type: integer
          - name: metadata
            in: query
            required: true
            type: string
            format: other
            description: Should the metadata (non-email) in the CSV be stored? (true or false)
          - name: slug_col
            required: false
            in: query
            type: integer
            description: |
              The column in the csv containing a slug for each member. If this is omitted,
              a slug will be generated automatically.
  - path: /list/{list_slug}/
    operations:
      - method: GET
        nickname: getList
        summary: Retrieve an individual list by its slug
        type: ListResponse
        parameters:
          - name: pretty
            description: Indent JSON output?
            paramType: query
            type: boolean
            defaultValue: false
      - method: DELETE
        nickname: deleteList
        summary: Delete an individual list and all its subscribers
  - path: /list/{list_slug}/subscribe.csv
    operations:
      - method: POST
        nickname: appendList
        summary: Add more subscribers to a given list
        type: ListResponse
        consumes: ['text/csv']
        notes: |
          This method is used to subscribe additional users to a list. Note that you must
          provide mapping data in the URL parameters as documented below.
        parameters:
          - name: header
            in: query
            description: Is there a header row present in the CSV data
            required: true
            type: boolean
          - name: email_col
            in: query
            description: Which column is the email address in? (0 = first column)
            required: true
            type: integer
          - name: metadata
            in: query
            required: true
            type: string
            format: other
            description: Should the metadata (non-email) in the CSV be stored? (true or false)
          - name: slug_col
            required: false
            in: query
            type: integer
            description: |
              The column in the csv containing a slug for each member. If this is omitted,
              a slug will be generated automatically.
  - path: /list/{list_slug}/export.csv
    operations:
      - method: GET
        nickname: exportList
        summary: Export the subscribers in a list
        produces: ['text/csv']
        notes: |
          Use this method for bulk export of list subscribers.
models:

  ListCollection:
    id: ListCollection
    required: ['meta', 'paging', 'items']
    properties:
      meta: {$ref: MetaRef, required: true}
      paging: {$ref: Paging, required: true}
      items:
        type: array
        items: {$ref: ListItem}

  ListItem:
    id: ListItem
    required: ['meta']
    properties:
      meta: {$ref: MetaRef}
      slug: {type: string, defaultValue: random-slug}
      size: {type: integer}

  ListResponse:
    id: ListResponse
    required: ['meta', 'slug', 'size']
    properties:
      meta: {$ref: MetaRef}
      slug: {type: string, defaultValue: random-slug}
      size: {type: integer}

  MetaRef:
    id: MetaRef
    required: ['href', 'links']
    properties:
      href: {type: string, format: url, defaultValue: "http://example.com"}
      links:
        type: array
        items: {$ref: Link}

  Link:
    id: Link
    required: [rel, href]
    properties:
      rel: {type: string, defaultValue: relation}
      href: {type: string, format: url, defaultValue: 'http://example.com'}

